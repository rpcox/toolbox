#!/bin/bash
# fst             print FILE access/inode change/modify time
# atime FILE      Get FILE access time
# ctime FILE      Get FILE inode change time
# mtime FILE      Get FILE modification time
# ftime FILE      Get all times for FILE
#

prog=$(basename $0)

if [[ -z $1 ]]; then
  printf "usage: $prog FILENAME\n"
  exit
fi


function atime {
  perl -e '@d=localtime((stat(shift))[8]); printf "%4d-%02d-%02d %02d:%02d:%02d%s",
           $d[5]+1900,$d[4]+1, $d[3], $d[2], $d[1], $d[0], " ";' $1
}

function ctime {
  perl -e '@d=localtime((stat(shift))[10]); printf "%4d-%02d-%02d %02d:%02d:%02d%s",
           $d[5]+1900,$d[4]+1, $d[3], $d[2], $d[1], $d[0], " ";' $1
}

function mtime {
  perl -e '@d=localtime((stat(shift))[9]); printf "%4d-%02d-%02d %02d:%02d:%02d%s",
           $d[5]+1900,$d[4]+1, $d[3], $d[2], $d[1], $d[0], " ";' $1
}

function tz {
  date +%z
}

device_type=$(devid $1 | cut -f 1)
device_id=$?

if [[ $device_id -eq 1 ]]; then       # fid threw a usage statement
  exit 1
elif [[ $device_id -eq 2 ]]; then     # fid received a non-existant file
  printf "device does not exist\n"
  exit 2
elif [[ $device_id -eq 99 ]]; then    # fid doesn't know what the file is
  printf "unknown fid return value. undetermined device.\n"
  exit 99
else
  case $prog in
    atime)
      echo -n "Access: "; atime $1; tz
          ;;
    ctime)
      echo -n "Change: "; ctime $1; tz
          ;;
    fst|ftime)
      echo -n "Access: "; atime $1; tz
      echo -n "Modify: "; mtime $1; tz
      echo -n "Change: "; ctime $1; tz
          ;;
    mtime)
      echo -n "Modify: "; mtime $1; tz
          ;;
        *)
      printf "You should not even be here. Something is really wrong\n"
          ;;
  esac

  exit $device_id
fi
